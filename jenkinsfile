pipeline {
  // Run the pipeline on your custom agent
  agent { label 'jenkins-agent' }

  environment {
    // Adjust these as needed
    APP_NAME = 'devsecops2-challenge'
    REGISTRY = '10.25.157.175:32003/docker-hosted'
  }

  stages {
    stage('Checkout') {
      steps {
        // Pull from your GitHub repoâ€™s main branch
        git(
          url: 'https://github.com/pranesh6hpe/devsecops2-challenge.git',
          branch: 'main',
          credentialsId: 'git-https'
        )
      }
    }

    stage('Build & Test') {
      agent {
        // Use a Maven+Java21 container for compilation and unit tests
        docker {
          image 'maven:3.9.7-openjdk-21'
          args  '-v $HOME/.m2:/root/.m2'
        }
      }
      steps {
        sh 'mvn clean verify -DskipITs'
      }
    }

    stage('Build & Push Image') {
      steps {
        script {
          // Short commit hash for your image tag
          def commit = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
          def image  = "${REGISTRY}/${APP_NAME}:${commit}"

          withCredentials([usernamePassword(
            credentialsId: 'nexus-cred',
            usernameVariable: 'NEXUS_USER',
            passwordVariable: 'NEXUS_PW'
          )]) {
            sh """
              docker build -t ${image} .
              echo "${NEXUS_PW}" | docker login --username "${NEXUS_USER}" --password-stdin ${REGISTRY}
              docker push ${image}
            """
          }
        }
      }
    }

    stage('Deploy to DEV') {
      steps {
        sh """
          helm upgrade --install ${APP_NAME} chart \
            --namespace devsecops2 \
            --set image.repository=${REGISTRY}/${APP_NAME} \
            --set image.tag=${env.BUILD_NUMBER}
        """
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
