pipeline {
  /*------------------------------------------------------------------
   * 1) Where the pipeline runs
   *------------------------------------------------------------------*/
  agent { label 'jenkins-agent' }          // your static or k8s agent

  /*------------------------------------------------------------------
   * 2) Global variables
   *------------------------------------------------------------------*/
  environment {
    APP_NAME      = 'devsecops2-challenge'                 // image/chart name
    REGISTRY_HOST = '10.25.157.175:32030'                  // Nexus Docker port
    IMAGE_ROOT    = "${REGISTRY_HOST}/docker-hosted"       // repo prefix
  }

  /*------------------------------------------------------------------
   * 3) Pipeline stages
   *------------------------------------------------------------------*/
  stages {

    /*--- Checkout source code ------------------------------------*/
    stage('Checkout') {
      steps {
        git url: 'https://github.com/pranesh6hpe/devsecops2-challenge.git',
            branch: 'main',
            credentialsId: 'git-https'
      }
    }

    /*--- Build & unit-test (Maven) ------------------------------*/
    stage('Build & Test') {
      steps {
        sh 'mvn clean verify -DskipITs'
      }
    }

    /*--- Build Docker image & push to Nexus ---------------------*/
    stage('Build & Push Image') {
      steps {
        script {
          /* short SHA tag */
          def commit = sh(returnStdout: true,
                          script: 'git rev-parse --short HEAD').trim()
          env.IMAGE_TAG = commit          // pass into shell below
          env.IMAGE     = "${IMAGE_ROOT}/${APP_NAME}:${commit}"

          /* safely pass creds withEnv ‚Üí no Groovy interpolation */
          withCredentials([usernamePassword(
            credentialsId: 'nexus-cred',
            usernameVariable: 'NEXUS_USER',
            passwordVariable: 'NEXUS_PW'
          )]) {
            sh '''
              echo "üõ†  Building Docker image $IMAGE"
              docker build -t $IMAGE .

              echo "üîê  Logging in to Nexus registry"
              echo "$NEXUS_PW" | docker login --tls-verify=false \
                   --username "$NEXUS_USER" --password-stdin "$REGISTRY_HOST"

              echo "üì§  Pushing $IMAGE"
              docker push "$IMAGE"
            '''
          }
        }
      }
    }

    /*--- Deploy to DEV namespace with Helm ----------------------*/
    stage('Deploy to DEV') {
      steps {
        sh '''
          echo "üöÄ  helm upgrade --install $APP_NAME"
          helm upgrade --install $APP_NAME chart \
            --namespace devsecops2 \
            --set image.repository=$IMAGE_ROOT/$APP_NAME \
            --set image.tag=$IMAGE_TAG
        '''
      }
    }
  }

  /*------------------------------------------------------------------
   * 4) Always cleanup
   *------------------------------------------------------------------*/
  post { always { cleanWs() } }
}
