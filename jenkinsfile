pipeline {
  agent { label 'kubernetes' }

  environment {
    REGISTRY        = 'gccvedl1205514:32003'           // Nexus Docker repo
    IMAGE           = "${REGISTRY}/hello-app:${env.BUILD_NUMBER}"
    KUBECONFIG_CRED = 'k8s-config'                    // Jenkins secret file
  }

  stages {
    stage('Checkout') {
      steps {
        git url: 'https://github.com/pranesh6hpe/devsecops2-challenge'
      }
    }

    stage('Build & Unit-test') {
      steps {
        sh 'mvn -B clean verify'
      }
      post {
        success { junit 'target/surefire-reports/*.xml' }
      }
    }

    stage('Build Container') {
      steps {
        sh "docker build -t ${IMAGE} ."
      }
    }

    stage('Push to Nexus') {
      steps {
        withCredentials([usernamePassword(
          credentialsId: 'nexus-cred',
          usernameVariable: 'NEXUS_USER',
          passwordVariable: 'NEXUS_PASS'
        )]) {
          sh '''
            echo "${NEXUS_PASS}" | docker login ${REGISTRY} -u "${NEXUS_USER}" --password-stdin
            docker push ${IMAGE}
          '''
        }
      }
    }

    stage('Deploy to dev') {
      steps {
        withKubeConfig(credentialsId: "${KUBECONFIG_CRED}") {
          sh """
            kubectl -n dev set image deploy/hello hello=${IMAGE} --record || \
            kubectl -n dev apply -f k8s/deployment-dev.yaml --record
            kubectl -n dev rollout status deploy/hello --timeout=300s
          """
        }
      }
    }

    stage('Promote to prod?') {
      when { input message: 'Promote the image to prod?', ok: 'Promote' }
      steps {
        withKubeConfig(credentialsId: "${KUBECONFIG_CRED}") {
          sh """
            kubectl -n prod set image deploy/hello hello=${IMAGE} --record || \
            kubectl -n prod apply -f k8s/deployment-prod.yaml --record
            kubectl -n prod rollout status deploy/hello --timeout=300s
          """
        }
      }
    }
  }
}
