pipeline {
  agent { label 'jenkins-agent' }

  environment {
    APP_NAME      = 'devsecops2-challenge'
    REGISTRY_HOST = '10.25.157.175:32003'
    REGISTRY      = "${REGISTRY_HOST}/docker-hosted"
  }

  stages {
    stage('Checkout') {
      steps {
        git(
          url: 'https://github.com/pranesh6hpe/devsecops2-challenge.git',
          branch: 'main',
          credentialsId: 'git-https'
        )
      }
    }

    stage('Debug JDK') {
      steps {
        sh 'java -version; javac -version'
      }
    }

    stage('Build & Test') {
      steps {
        sh 'mvn clean verify -DskipITs'
      }
    }

    stage('Build & Push Image') {
      steps {
        script {
          def commit = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
          def image  = "${REGISTRY}/${APP_NAME}:${commit}"

          withCredentials([usernamePassword(
            credentialsId: 'nexus-cred',
            usernameVariable: 'NEXUS_USER',
            passwordVariable: 'NEXUS_PW'
          )]) {
            // Use triple-double-quotes so ${image} and ${NEXUS_*} interpolate
            sh """
              docker build -t ${image} .
              echo "${NEXUS_PW}" | docker login --tls-verify=false \
                --username "${NEXUS_USER}" \
                --password-stdin ${REGISTRY_HOST}
              docker push ${image}
            """
          }
        }
      }
    }

    stage('Deploy to DEV') {
      steps {
        script {
          def commit = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
          sh """
            helm upgrade --install ${APP_NAME} chart \
              --namespace devsecops2 \
              --set image.repository=${REGISTRY}/${APP_NAME} \
              --set image.tag=${commit}
          """
        }
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
